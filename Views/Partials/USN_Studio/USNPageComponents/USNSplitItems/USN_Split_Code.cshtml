@inherits UmbracoViewPage<Usn_Pc_SplitComponent_AN>

@using USNStarterKit.USNHelpers;
@using USNStarterKit.USNModels;

@{
    string splitSide = ViewData["splitSide"].ToString();
    string colWidthDesktop = splitSide == "First" ? "col-lg-" + Model.DesktopColumnWidthFirst : "col-lg-" + Model.DesktopColumnWidthSecond;
    string colWidthTablet = splitSide == "First" ? "col-md-" + Model.TabletColumnWidthFirst : "col-md-" + Model.TabletColumnWidthSecond;
    string itemDesktopOrder = ThemeHelper.GetSplitDesktopTabletOrderClass(splitSide, Model.DesktopTabletOrder);
    string itemMobileOrder = ThemeHelper.GetSplitMobileOrderClass(splitSide, Model.MobileOrder);
    string verticalAlignment = splitSide == "First" ? (Model.VerticalPositionFirst.HasValue() ? Model.VerticalPositionFirst.ToString() : String.Empty) : (Model.VerticalPositionSecond.HasValue() ? Model.VerticalPositionSecond.ToString() : String.Empty);
    string verticalAlignmentClass = ThemeHelper.GetVerticalAlignmentClass(verticalAlignment);

    string code = splitSide == "First" ? Model.CodeFirst : Model.CodeSecond;
    USNHeading heading = splitSide == "First" ? Model.CodeHeadingFirst : Model.CodeHeadingSecond;
    string secondaryHeading = splitSide == "First" ? Model.CodeSecondaryHeadingFirst : Model.CodeSecondaryHeadingSecond;
    USNAnimation animation = splitSide == "First" ? ThemeHelper.GetAnimationSettings(Model.AnimateFirst,Model.AnimationDelayFirst,Model.AnimationStyleFirst) : ThemeHelper.GetAnimationSettings(Model.AnimateSecond,Model.AnimationDelaySecond,Model.AnimationStyleSecond);

    <div class="item item_block item_code-block @verticalAlignmentClass @colWidthDesktop @colWidthTablet @itemDesktopOrder @itemMobileOrder col-12 @animation.AnimationClass" data-os-animation="@animation.AnimationStyle" data-os-animation-delay="@animation.AnimationDelay">

        @if (heading.HasValue() || secondaryHeading.HasValue())
        {
            <div class="component-introduction @animation.AnimationClass" data-os-animation="@animation.AnimationStyle" data-os-animation-delay="@animation.AnimationDelay">

                @if (secondaryHeading.HasValue())
                {
                    <p class="secondary-heading @(Model.BackgroundColor.label)-secondary-heading @animation.AnimationClass" data-os-animation="@animation.AnimationStyle" data-os-animation-delay="@animation.AnimationDelay">@secondaryHeading</p>
                }
                @if (heading.HasValue())
                {
                    @Html.Raw(String.Format("<{0} class=\"heading main {1}-heading\">{2}</{0}>", heading.HeadingTag, Model.BackgroundColor.label, heading.Text))
                }

            </div>
        }

        @Html.Raw(code)

    </div>

}
