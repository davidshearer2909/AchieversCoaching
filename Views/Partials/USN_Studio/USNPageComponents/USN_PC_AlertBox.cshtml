@inherits UmbracoViewPage<Usn_Pc_AlertBox_AN>

@using USNStarterKit.USNHelpers;
@using USNStarterKit.USNModels;

@{
    string viewPath = ViewData["viewPath"].ToString();
    string pageLayout = ViewData["pageLayout"].ToString();
    string backgroundImageStyle = ThemeHelper.GetBackgroundImageStyle(Model.BackgroundImageOptions, Model.BackgroundImage);
    string backGroundColor = Model.BackgroundColor.label + "-bg";
    USNAnimation animation = ThemeHelper.GetAnimationSettings(Model.Animate,Model.AnimationDelay,Model.AnimationStyle);

    string alertClass = String.Empty;

    switch (Model.Color)
    {
        case "d9edf7":
            alertClass = "alert-info";
            break;
        case "dff0d8":
            alertClass = "alert-success";
            break;
        case "fcf8e3":
            alertClass = "alert-warning";
            break;
        case "f2dede":
            alertClass = "alert-danger";
            break;
        default:
            alertClass = "alert-info";
            break;
    }

    <section class="content component alert-component @backGroundColor @Model.CustomComponentClasses" id="@Html.Raw("pos_" + Model.Id)" @Html.Raw(backgroundImageStyle)>

        @if (pageLayout == "pageLayoutFull")
        {
            if(Model.ComponentWidth == "componentWidthCenter")
            {
                @:<div class="container"><div class="row justify-content-center"><div class="content-col center-col col-lg-6 col-12 col">
            }
            else if(Model.ComponentWidth == "componentWidthFull")
            {
                @:<div class="container-fluid">
            }
            else
            {
                @:<div class="container">
            }
        }

        @Html.Partial(viewPath + "/USNMiscPageElements/USN_ComponentIntro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animation", animation }, { "backgroundColor", Model.BackgroundColor.label } })

        <div class="alert @alertClass @animation.AnimationClass" data-os-animation="@animation.AnimationStyle" data-os-animation-delay="@animation.AnimationDelay" role="alert">
            @if (!Model.HideCloseOption)
            {
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            }
            <div class="info">@Html.Raw(Model.Text)</div>
        </div>

        @Html.Partial(viewPath + "/USNMiscPageElements/USN_ComponentOutro", @Model as IUsn_Cmp_IntroOutro, new ViewDataDictionary { { "animation", animation }, { "backgroundColor", Model.BackgroundColor.label } })

        @if (pageLayout == "pageLayoutFull")
        {
            if (Model.ComponentWidth == "componentWidthCenter")
            {
            @:</div></div></div>
            }
            else
            {
                @:</div>
            }
        }
    </section>
}